---
title: "modifying mirt package"
author: "Karel"
date: "3-2-2021"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## R Markdo
```{r}
library(mirt)

```

modified code for M step:
```{r}
setwd("C:/Users/gebruiker/Documents/ResMas/thesis/mirt/R/")
files = list.files(getwd())

for(file in files)
{
    source(file)
}

RMSE <- function(par, est)
{
  sqrt(sum((est-par)^2) / length(par))
}
```


cross validation
```{r}
predict.mirt <- function(a, d, theta)
{
  
  prob <- t(exp(a %*% t(theta) +d) / (1 + exp(a %*% t(theta)+d)))
  
  return(prob)
}

cv.mirt <- function(data, model, method, randompars, k = c(3,3), lambda, a_true, d_true, theta_true, pars)
{


  folds.persons <-  cut(seq(1,nrow(data)),breaks=k[1],labels=FALSE)
  folds.items <- cut(seq(1,ncol(data)),breaks=k[2],labels=FALSE)
  
  rmses = c()
  for (i in 1:k[1])
  {
    for (j in 1:k[2])
    {
      print(c(i,j))
      # idices for the test set
      per.ind <- which(folds.persons==i)
      item.ind <- which(folds.items==j)
      
      test <- data[per.ind, item.ind]
      train <- data
      train[per.ind,item.ind] <- NA


      # fit model and save parameters: 
      fit <- mirt(train, model, '2PL', method=method, GenRandomPars = randompars, lambda=lambda, pars=pars,
                  technical = list())
      
      itempars <- coef(fit, simplify = TRUE)$items
      a <- itempars[,1:(ncol(itempars)-3)]
      d <- itempars[, ncol(itempars)-2]
      theta <- fscores(fit)
      

      # true and predicted probablities
      p.pred <- predict.mirt(a, d, theta)
      p.true <- predict.mirt(a_true, as.vector(d_true), theta_true)

      
      rmses <- c(rmses, RMSE(est =p.pred[per.ind, item.ind], par =p.true[per.ind, item.ind]))

    }
  }
  return(mean(rmses))
}



```


# one factor
```{r}
set.seed(2)
theta1 <- matrix(rnorm(10000), ncol=1)
d1 <- matrix(rnorm(400))
a1 <- matrix(runif(400,0,2))

a1[1] <- 0

data1 = simdata(a1, d1, itemtype = '2PL', Theta = theta1)
data1[sample(length(data1), length(data1)*.95, replace = FALSE)] <- NA

pars <- mirt(data1,1, pars = 'values')
pars[pars$name == 'a1' & pars$item %in% paste0('Item_', 1), ]$value = 0
pars[pars$name == 'a1' & pars$item %in% paste0('Item_', 1), ]$est = FALSE




fit1 <- mirt(data1, 1, '2PL', lambda = c(0,0.79), technical = list(removeEmptyRows=TRUE), pars=pars)
  


est1 = coef(fit1, simplify=TRUE)

plot(a1, est1$items[,1], main = 'a: sparsity = .95', ylim = c(-1,2))
abline(0,1)

plot(d1, est1$items[,2], main = 'd: sparsity = .95')
abline(0,1)

plot(theta1, fscores(fit1), main = 'Theta: sparsity = .95', ylab = 'est')
abline(0,1, col = 'red', lwd = 2)
```


One factor with CV:
```{r}
set.seed(1)
theta1 <- matrix(rnorm(10000), ncol=1)
d1 <- matrix(rnorm(400))
a1 <- matrix(runif(400,0,2))

a1[1] <- 0
d1[1] <- 0

pars <- mirt(data1,1, pars = 'values')
pars[pars$name == 'a1' & pars$item %in% paste0('Item_', 1), ]$value = 0
pars[pars$name == 'a1' & pars$item %in% paste0('Item_', 1), ]$est = FALSE
pars[pars$name == 'a1' & pars$item %in% paste0('Item_', 1), ]$value = 0
pars[pars$name == 'a1' & pars$item %in% paste0('Item_', 1), ]$est = FALSE


data1 = simdata(a1, d1, itemtype = '2PL', Theta = theta1)
data1[sample(length(data1), length(data1)*.50, replace = FALSE)] <- NA

lambdas = seq(0,10, length.out = 20)
results = matrix(, length(lambdas), 2)
for (i in 1:length(lambdas))
{
  t1 = Sys.time()
  rmse <- cv.mirt(data1, 1, 
                  method = 'EM',
                  randompars = F, k = c(3,3), 
                  lambda = c(0,lambdas[i]), 
                  a_true = a1, 
                  d_true = d1, 
                  theta_true = theta1,
                  pars = pars)
  results[i, ] = c(lambdas[i], rmse)
  print(i/length(lambdas)*100)
  print(Sys.time()-t1)
}

cv.ridge.1d <- list(results=results, theta = theta1, d=d1, a=a1, data = data1)

#save(cv.ridge.1d, file = 'cv_results_1d_ridge_50.RData')
```

```{r}
sim_rec2 <- function(nuser, nitem, sparsity)
{
    theta <- matrix(rnorm(nuser*2), ncol=2)
    d <- matrix(rnorm(nitem))
    a <- matrix(runif(nitem*2, 0, 2),ncol=2)
    
    a[1:5, 1] <- 0
    a[6:10, 2] <- 0
    
    data = simdata(a, d, itemtype = '2PL', Theta = theta)
    data[sample(length(data), length(data)*sparsity, replace = FALSE)] <- NA
    
    complete = rowSums(is.na(data)) != ncol(data) 
    data = data[complete,]
    rownames(data) <- 1:nrow(data)
    theta = theta[complete,]

    pars <- mirt(data,2, pars = 'values')
    pars[pars$name == 'a1' & pars$item %in% paste0('Item_', 1:5), ]$value = 0
    pars[pars$name == 'a1' & pars$item %in% paste0('Item_', 1:5), ]$est = FALSE
    pars[pars$name == 'a2' & pars$item %in% paste0('Item_', 6:10), ]$value = 0
    pars[pars$name == 'a2' & pars$item %in% paste0('Item_', 6:10), ]$est = FALSE
    

    
    fit = mirt(data, 2, '2PL', 
               method = 'EM', 
               pars = pars, 
               GenRandomPars = FALSE, 
               lambda = c(0,0))
    
    itempars <- coef(fit, simplify = TRUE)$items
    
    a.est <- itempars[,1:(ncol(itempars)-3)]
    d.est <- itempars[, ncol(itempars)-2]
    theta.est <- fscores(fit)
    
    for (i in 1:ncol(a))
    {
        if (sign(cor(a.est[,i], a[,i])) == -1)
        {
            a.est[,i] = -a.est[,i]
            theta.est[,i] = -theta.est[,i]
        }
    }
    
    true = list(a=a, d=d, theta=theta)
    est = list(a=a.est, d=d.est, theta=theta.est)
    
    return(list(true=true, est=est))
}
```


theta 2d sample size
```{r}
rmses_theta2 <- matrix(, nrow=1, ncol=15)
for (i in 1:15)
{
    print(i)
    n2 <- i * 50
    sim <- sim_rec2(10000,n2, .95)
    rmse_theta <- RMSE(sim$true$theta, sim$est$theta)
    
    rmses_theta2[i] = rmse_theta
}

png(filename='theta2d.png')
plot((1:15)*50 ,rmses_theta2, xlab = 'n items', ylab = 'rmse', main = 'theta')
dev.off()

#sim100 = sim_rec2(1000, 100, .95)
#sim300 = sim_rec2(1000, 200, .95)

#RMSE(sim100$true$theta, sim100$est$theta)
#RMSE(sim300$true$theta, sim300$est$theta)
```


two factors
```{r}
theta2 <- cbind(rnorm(10000), rnorm(10000))
d2 <- matrix(runif(400,-2,2))
a2 <- cbind(runif(400, 0, 2), runif(400, 0, 2))

a2[1,1] <- 0
a2[6,2] <- 0



data2 <- simdata(a= a2, d = d2, Theta = theta2, itemtype = '2PL')

data2[sample(length(data2), length(data2)*.95, replace = FALSE)] <- NA


# impose structure
pars <- mirt(data2,2, pars = 'values')
pars[pars$name == 'a1' & pars$item %in% paste0('Item_', 1), ]$value = 0
pars[pars$name == 'a1' & pars$item %in% paste0('Item_', 1), ]$est = FALSE
pars[pars$name == 'a2' & pars$item %in% paste0('Item_', 6), ]$value = 0
pars[pars$name == 'a2' & pars$item %in% paste0('Item_', 6), ]$est = FALSE




#pars[pars$name == 'MEAN_2' & pars$item == 'GROUP', ]$est = TRUE


fit2 <- mirt(data2, 2, '2PL', lambda= c(5,0), pars=pars)

est2 <- coef(fit2, simplify = TRUE)
itempars <- est2$items
a <- itempars[,1:(ncol(itempars)-3)]
d <- itempars[, ncol(itempars)-2]
theta <- fscores(fit2)
    
# true and predicted probablities
p.pred <- predict.mirt(a, d, theta)
p.true <- predict.mirt(a2, as.vector(d2), theta2)



# plot estimated coefficients against true values
plot(a2[,1], est2$items[,1], main = 'mirt 2d: a1')
abline(0,1)
plot(a2[,2], est2$items[,2], main = 'mirt 2d: a2', ylim = c(-3,2))
abline(0,1)
plot(d2, est2$items[,3], main = 'mirt 2d: d')
abline(0,1)


theta.est2 <- fscores(fit2)

plot(theta2[,1], theta.est2[,1], main = 'mirt 2d: theta 1')
abline(0,1, col = 'red', lwd = 2)
plot(theta2[,2], theta.est2[,2], main = 'mirt 2d: theta 2')
abline(0,1, col = 'red', lwd = 2)
```
two factors cross validation
```{r}
set.seed(1)
theta2 <- cbind(rnorm(10000), rnorm(10000))
d2 <- matrix(runif(400,-2,2))
a2 <- cbind(runif(400, 0, 2), runif(400, 0, 2))

a2[1:5,1] <- 0
a2[6:10,2] <- 0



data2 <- simdata(a= a2, d = d2, Theta = theta2, itemtype = '2PL')

data2[sample(length(data2), length(data2)*.50, replace = FALSE)] <- NA



# impose structure
pars <- mirt(data2,2, pars = 'values')
pars[pars$name == 'a1' & pars$item %in% paste0('Item_', 1:5), ]$value = 0
pars[pars$name == 'a1' & pars$item %in% paste0('Item_', 1:5), ]$est = FALSE
pars[pars$name == 'a2' & pars$item %in% paste0('Item_', 6:10), ]$value = 0
pars[pars$name == 'a2' & pars$item %in% paste0('Item_', 6:10), ]$est = FALSE

lambdas = seq(0,5, length.out = 15)
results = matrix(, length(lambdas), 2)
begin = Sys.time()
for (i in 1:length(lambdas))
{
  t1 = Sys.time()
  rmse <- cv.mirt(data2, 2, 
                  method = 'EM',
                  randompars = F, k = c(3,2), 
                  lambda = c(0,lambdas[i]), 
                  a_true = a2, 
                  d_true = d2, 
                  theta_true = theta2,
                  pars=pars)
  results[i, ] = c(lambdas[i], rmse)
  print(i/length(lambdas))
  print(Sys.time()-t1)
}
print(paste('total:', Sys.time()-begin))

cv.ridge.2d <- list(results=results, theta = theta2, d=d2, a=a2, data = data2)

save(cv.ridge.2d, file = 'cv_results_2d_ridge_50.RData')

```

```{r}
file = 'C:/Users/gebruiker/Documents/ResMas/thesis/results/2d/cv_results_2d_ridge_50.RData'
load(file)

plot(cv.ridge.2d$results[,1], cv.ridge.2d$results[,2])
```



2 factors with covariance
```{r}
cm <- matrix(c(1,0,0,1),2)
theta2c <- MASS::mvrnorm(5000, c(0,0), cm)
d2c <- matrix(runif(100,-2,2))
a2c <- cbind(runif(100, -2, 2), runif(100, -2, 2))

a2c[1:5,1] <- 0
a2c[6:10,2] <- 0

data2c <- simdata(a= a2c, d = d2c, Theta = theta2c, itemtype = '2PL')

data2c[sample(length(data2c), length(data2c)*.9, replace = FALSE)] <- NA


# impose structure
pars <- mirt(data2c,2, pars = 'values')
pars[pars$name == 'a1' & pars$item %in% paste0('Item_', 1:5), ]$value = 0
pars[pars$name == 'a1' & pars$item %in% paste0('Item_', 1:5), ]$est = FALSE
pars[pars$name == 'a2' & pars$item %in% paste0('Item_', 6:10), ]$value = 0
pars[pars$name == 'a2' & pars$item %in% paste0('Item_', 6:10), ]$est = FALSE

#values <- mirt(data2,2, pars = 'values')


fit2c <- mirt(data2c, 2, '2PL', lambda= c(0,0), pars=pars)

est2c <- coef(fit2c, simplify = TRUE)


# plot estimated coefficients against true values
plot(a2c[,1], est2c$items[,1], main = 'mirt 2d: a1')
abline(0,-1)
plot(a2c[,2], est2c$items[,2], main = 'mirt 2d: a2')
abline(0,-1)
plot(d2c, est2c$items[,3], main = 'mirt 2d: d')
abline(0,1)


theta.est2c <- fscores(fit2c)

plot(theta2c[,1], theta.est2c[,1], main = 'mirt 2d: theta 1')
abline(0,-1, col = 'red', lwd = 2)
plot(theta2c[,2], theta.est2c[,2], main = 'mirt 2d: theta 2')
abline(0,-1, col = 'red', lwd = 2)
```


3 dimensional mirt model 
```{r}
cm3 <- matrix(c(1,0,0, 0, 1, 0, 0,0,1),3)
theta3 = MASS::mvrnorm(10000, c(0,0,0), cm3)
d3 <- matrix(runif(400,-2,2))
a3 <- matrix(runif(1200, 0, 2), ncol = 3)

a3[1:5, 1] = 1
a3[11:15, 2] = 1
a3[21:25, 3] = 1
d3[31:40] = 1


data3 <- simdata(a= a3, d = d3, Theta = theta3, itemtype = '2PL')
data3[sample(length(data3), length(data3)*.5, replace = FALSE)] <- NA


# impose structure
pars <- mirt(data3,3, pars = 'values')
pars[pars$name == 'a1' & pars$item %in% paste0('Item_', 1:5), ]$value = 1
pars[pars$name == 'a1' & pars$item %in% paste0('Item_', 1:5), ]$est = FALSE
pars[pars$name == 'a2' & pars$item %in% paste0('Item_', 11:15), ]$value = 1
pars[pars$name == 'a2' & pars$item %in% paste0('Item_', 11:15), ]$est = FALSE
pars[pars$name == 'a3' & pars$item %in% paste0('Item_', 21:25), ]$value = 1
pars[pars$name == 'a3' & pars$item %in% paste0('Item_', 21:25), ]$est = FALSE

pars[pars$name == 'd' & pars$item %in% paste0('Item_', 31:40), ]$value = 1
pars[pars$name == 'd' & pars$item %in% paste0('Item_', 31:40), ]$est = FALSE

pars[pars$name == 'MEAN_2' & pars$item == 'GROUP', ]$est = TRUE
#pars[pars$name == 'MEAN_3' & pars$item == 'GROUP', ]$est = TRUE


fit3 <- mirt(data3, 3, '2PL', method = 'MCEM', lambda =c(0,0), pars = pars)
est3 <- coef(fit3, simplify = TRUE)


# plot estimated coefficients against true values
plot(d3, est3$items[,4], main = 'mirt 2d: d')
abline(0,1)
plot(a3[,1], est3$items[,1], main = 'mirt 2d: a1')
abline(0,1)
plot(a3[,2], est3$items[,2], main = 'mirt 2d: a2')
abline(0,1)
plot(a3[,3], est3$items[,3], main = 'mirt 2d: a3')
abline(0,1)

theta.est3 <- fscores(fit3)

plot(theta3[,1], theta.est3[,2], main = 'mirt 3d: theta 1')
abline(0,1, col = 'red', lwd = 2)
plot(theta3[,2], theta.est3[,1], main = 'mirt 3d: theta 2')
abline(0,1, col = 'red', lwd = 1)
plot(theta3[,3], theta.est3[,3], main = 'mirt 3d: theta 2')
abline(0,1, col = 'red', lwd = 1)

RMSE(a3, est3$items[,1:3])
RMSE(d3, est3$items[,4])
RMSE(theta3, theta.est3)
```

```{r}
cm32 <- matrix(c(1,0,0, 0, 1, 0, 0,0,1),3)
theta32 <- MASS::mvrnorm(10000, c(0,0,0), cm32)
d32 <- matrix(runif(400,-2,2))
a32 <- cbind(runif(400, 0, 2), runif(400, 0, 2), runif(400, 0, 2))

a32[1:10, 1] = 1
a32[11:20, 2] = 1
a32[21:30, 3] = 1


data32 <- simdata(a= a32, d = d32, Theta = theta32, itemtype = '2PL')
data32[sample(length(data32), length(data32)*.9, replace = FALSE)] <- NA


pars <- mirt(data32,3, pars = 'values')
pars[pars$name == 'a1' & pars$item %in% paste0('Item_', 1:10), ]$value = 1
pars[pars$name == 'a1' & pars$item %in% paste0('Item_', 1:10), ]$est = FALSE
pars[pars$name == 'a2' & pars$item %in% paste0('Item_', 11:20), ]$value = 1
pars[pars$name == 'a2' & pars$item %in% paste0('Item_', 11:20), ]$est = FALSE
pars[pars$name == 'a3' & pars$item %in% paste0('Item_', 21:30), ]$value = 1
pars[pars$name == 'a3' & pars$item %in% paste0('Item_', 21:30), ]$est = FALSE



system.time(fit32 <- mirt(data32, 3, '2PL', method = 'MCEM', lambda =c(0,0)))
est32 <- coef(fit32, simplify = TRUE)


# plot estimated coefficients against true values
plot(d32, est32$items[,4], main = 'mirt 2d: d')
abline(0,1)
plot(a32[,1], est32$items[,2], main = 'mirt 2d: a1', ylim = c(-2,2))
abline(0,-1)
plot(a32[,2], est32$items[,3], main = 'mirt 2d: a2')
abline(0,1)
plot(a32[,3], est32$items[,1], main = 'mirt 2d: a3')
abline(0,1)

theta.est32 <- fscores(fit32)

plot(theta32[,1], theta.est32[,1], main = 'mirt 3d: theta 1')
abline(0,1, col = 'red', lwd = 2)
plot(theta32[,2], theta.est32[,3], main = 'mirt 3d: theta 2')
abline(0,1, col = 'red', lwd = 1)
plot(theta32[,3], theta.est32[,2], main = 'mirt 3d: theta 2')
abline(0,1, col = 'red', lwd = 1)

RMSE(a32, est32$items[,1:3])
RMSE(d32, est32$items[,4])
RMSE(theta32, theta.est32)

```


```{r}
theta10 <- matrix(rnorm(50000), ncol = 10)
d10 <- matrix(runif(100,-2,2))
a10 <- matrix(runif(1000, 0, 2), ncol=10)

a10[1:5, 1] <- 0
a10[6:10, 2] <- 0
a10[11:15, 3] <- 0
a10[16:20, 4] <- 0
a10[21:25, 5] <- 0
a10[26:30, 6] <- 0
a10[31:35, 7] <- 0
a10[36:40, 8] <- 0
a10[41:45, 9] <- 0
a10[46:50, 10] <- 0



data10 <- simdata(a= a10, d = d10, Theta = theta10, itemtype = '2PL')
data10[sample(length(data10), length(data10)*.9, replace = FALSE)] <- NA

set.seed(3)

s = 'F1 = 6-100
  F2 = 1-5, 11-100
  F3 = 1-10, 16-100
  F4 = 1-15, 21-100
  F5 = 1-20, 26-100
  F6 = 1-25, 31-100
  F7 = 1-30, 36-100
  F8 = 1-35, 41-100
  F9 = 1-40, 46-100
  F10 = 1-45, 51-100
  COV = 0'

mod10 = mirt.model(s)


fit10 <- mirt(data10, mod10, '2PL', lambda= c(0,0), method='MCEM')

est10 <- coef(fit10, simplify = TRUE)

theta.est10 <- fscores(fit10, QMC=TRUE)


for(i in 1:10)
{
  plot(a10[,i], est10$items[,i])
}
```

```{r}

plot(d10, est10$items[,11])

for (i in 1:10){
  plot(a10[,i], est10$items[,i])
}
```




```{r}
cm <- matrix(c(1,0,0,1),2)
theta2c <- MASS::mvrnorm(10000, c(0,0), cm)
d2c <- matrix(runif(500,-2,2))
a2c <- cbind(runif(500, -2, 2), runif(50, -2, 2))

a2c[1:5,1] <- 0
a2c[6:10,2] <- 0

# generate data and let values be missing randomly 
data2c <- simdata(a= a2c, d = d2c, Theta = theta2c, itemtype = '2PL')
data2c[sample(length(data2c), length(data2c)*.95, replace = FALSE)] <- NA


s = 'F1 = 6-500
  F2 = 1-5, 11-500
  '

mod2 = mirt.model(s)


lambda = c(200, 250, 300, 350, 400, 450, 500)
results = cbind(lambda,NA)
t1 = Sys.time()
for (i in 1:length(lambda))
{
  print(i)
  results[i,2] <- cv.mirt(data2c, mod2, 'EM', randompars = F, lambda = c(lambda[i],0))
  print(Sys.time()-t1)
}

save(results, file='cvresults3.RData')

```

```{r}
fit2c <- mirt(data2c, mod2, '2PL', lamda = c(300,0))
est2c <- coef(fit2c, simplify = TRUE)


# plot estimated coefficients against true values
plot(a2c[,1], est2c$items[,1], main = 'mirt 2d: a1')
abline(0,1)
plot(a2c[,2], est2c$items[,2], main = 'mirt 2d: a2')
abline(0,1)
plot(d2c, est2c$items[,3], main = 'mirt 2d: d')
abline(0,1)


theta.est2c <- fscores(fit2c)

plot(theta2c[,1], theta.est2c[,1], main = 'mirt 2d: theta 1')
abline(0,-1, col = 'red', lwd = 2)
plot(theta2c[,2], theta.est2c[,2], main = 'mirt 2d: theta 2')
abline(0,-1, col = 'red', lwd = 2)
```

```{r}

```

