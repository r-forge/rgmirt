{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"mirt(data3, 3, \"2PL\", method = \"MCEM\", lambda = c(0, 0), pars = pars)","line_number":0},{"character_number":5,"end_character_number":100,"end_line_number":1215,"file":"mirt.R","func":"ESTIMATION(data = data, model = model, group = rep(\"all\", nrow(data)), \n    itemtype = itemtype, guess = guess, upper = upper, grsm.block = grsm.block, \n    pars = pars, method = method, constrain = constrain, SE = SE, \n    TOL = TOL, parprior = parprior, quadpts = quadpts, monopoly.k = monopoly.k,  ...","line_number":1205},{"character_number":9,"end_character_number":81,"end_line_number":610,"file":"03-estimation.R","func":"EM.group(pars = pars, constrain = constrain, Ls = Ls, PrepList = PrepList, \n    Data = Data, list = list(NCYCLES = opts$NCYCLES, TOL = opts$TOL, \n        MSTEPTOL = opts$MSTEPTOL, nfactNames = PrepList[[1L]]$nfactNames, \n        theta = theta, itemloc = PrepList[[1L]]$itemloc, dentype = opts$dentype,  ...","line_number":595},{"character_number":13,"end_character_number":62,"end_line_number":303,"file":"EMstep.group.R","func":"Mstep(pars = pars, est = est, longpars = longpars, ngroups = ngroups, \n    J = J, gTheta = gTheta, itemloc = itemloc, Prior = Prior, \n    ANY.PRIOR = ANY.PRIOR, CUSTOM.IND = CUSTOM.IND, SLOW.IND = list$SLOW.IND, \n    PrepList = PrepList, L = L, UBOUND = UBOUND, LBOUND = LBOUND,  ...","line_number":296},{"character_number":13,"end_character_number":35,"end_line_number":90,"file":"EMstep.utils.R","func":"try(optim(p, fn = Mstep.LL, gr = Mstep.grad, method = \"BFGS\", \n    control = control, DERIV = DERIV, rlist = rlist, CUSTOM.IND = CUSTOM.IND, \n    SLOW.IND = SLOW.IND, est = est, longpars = longpars, pars = pars, \n    ngroups = ngroups, J = J, gTheta = gTheta, PrepList = PrepList,  ...","line_number":85},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tryCatch(expr, error = function(e) {\n    call <- conditionCall(e)\n    if (!is.null(call)) {\n        if (identical(call[[1L]], quote(doTryCatch)))  ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tryCatchList(expr, classes, parentenv, handlers)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"doTryCatch(return(expr), name, parentenv, handler)","line_number":0},{"character_number":13,"end_character_number":35,"end_line_number":90,"file":"EMstep.utils.R","func":"optim(p, fn = Mstep.LL, gr = Mstep.grad, method = \"BFGS\", control = control, \n    DERIV = DERIV, rlist = rlist, CUSTOM.IND = CUSTOM.IND, SLOW.IND = SLOW.IND, \n    est = est, longpars = longpars, pars = pars, ngroups = ngroups, \n    J = J, gTheta = gTheta, PrepList = PrepList, L = L, constrain = constrain,  ...","line_number":85},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"(function (par) \nfn(par, ...))(c(a2 = 2.56409270249697, a3 = 2.67224841748413, \nd = 6.71738334364176, a2 = 0.431070848989571, a3 = 3.0587323230747, \nd = 1.26874654457354, a2 = 3.53895982538438, a3 = 1.82142052353169,  ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"fn(par, ...)","line_number":0},{"character_number":5,"end_character_number":49,"end_line_number":217,"file":"EMstep.utils.R","func":"unlist(sapply(pars[[1]], slot, \"par\"))","line_number":217},{"character_number":5,"end_character_number":49,"end_line_number":217,"file":"EMstep.utils.R","func":"sapply(pars[[1]], slot, \"par\")","line_number":217},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"lapply(X = X, FUN = FUN, ...)","line_number":0}],"message":"no loop for break/next, jumping to top level"}